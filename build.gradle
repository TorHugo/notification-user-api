plugins {
	id 'java'
	id 'jacoco'
	id 'org.springframework.boot' version '3.2.4'
	id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.dev.notification.app'
version = 'v0.0.1'

java {
	sourceCompatibility = '21'
}

jacoco {
	toolVersion = "0.8.8"
}


bootJar {
	archiveFileName = 'user-client-api.jar'
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-amqp'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.mindrot:jbcrypt:0.4'
	implementation 'com.fasterxml.jackson.core:jackson-databind:2.16.1'
	implementation 'org.springframework.kafka:spring-kafka'
	implementation 'org.mapstruct:mapstruct:1.4.2.Final'
	implementation 'com.google.code.gson:gson:2.8.9'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.junit.jupiter:junit-jupiter'
	testImplementation 'org.mockito:mockito-junit-jupiter:5.6.0'

	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
}

tasks.named('test') {
	useJUnitPlatform()
}


tasks.jacocoTestReport {
	dependsOn test
	reports {
		xml.required = true
		html.required = true
	}
}

tasks.jacocoTestCoverageVerification {
	violationRules {
		rule {
			limit {
				minimum = 0.8
			}
		}
	}
}

check.dependsOn jacocoTestCoverageVerification

