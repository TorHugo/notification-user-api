server:
  port: ${USER_CLIENT_PORT:8080}
  servlet:
    context-path: /api

logging:
  level:
    org:
      apache:
        kafka: WARN

spring:
  application:
    name: user_client_api

  datasource:
    url: jdbc:postgresql://${DB_URI:localhost}:${DB_PORT:5432}/notification
    username: ${DB_USERNAME:admin}
    password: ${DB_PASSWORD:admin}
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        jdbc:
          lob:
            non_contextual_creation: true
        default_schema: user_client_db
    open-in-view: false

  kafka:
    consumer:
      group-id: ${KAFKA_GROUP_ID:notification-user-api}
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      bootstrap-servers: localhost:9092
    producer:
      send-event-create-account-topic: CreateAccountEventTopic # to auth-service-api
      send-event-notification-topic: NotificationEventTopic # to notification-lambda
      send-event-confirmed-account-topic: ConfirmedAccountEventTopic # to auth-service-api
      send-event-reset-password-topic: ResetPasswordEventTopic # to auth-service-api

  data:
    redis:
      host: ${REDIS_URI:localhost}
      port: ${REDIS_PORT:6379}
      timeout: ${REDIS_TIMEOUT:3000ms}
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0
          max-wait: -1ms
      key:
        time-invalid-key: 1 # hours
        prefix-name:
          confirmed-account: confirmed-account
          reset-password: reset-password

  integration:
    hash:
      digits:
        confirmed-account: 6
        forget-password: 5
    expiration-time:
      confirmed-account: 900000 # milliseconds
      reset-password: 1000000 # milliseconds

management:
  endpoints:
    web:
      exposure:
        include: "prometheus"
  metrics:
    tags:
      enabled: true
