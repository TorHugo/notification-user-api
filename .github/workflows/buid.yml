name: User-Client-API Pipeline

on:
  push:
    branches:
      - develop
    paths-ignore:
      - '.gitignore'

jobs:

#  deploy-test:
#    runs-on: ubuntu-latest
#
#    steps:
#      - uses: actions/checkout@v3
#
#      - name: Set up JDK 21
#        uses: actions/setup-java@v3
#        with:
#          java-version: 21
#          distribution: 'adopt'
#          cache: gradle
#
#      - name: Grant execute permission for gradlew
#        run: chmod +x gradlew
#
#      - name: Run Tests
#        uses: gradle/gradle-build-action@v2
#        with:
#          arguments: testClasses
#
#      - name: Generate Code Coverage Report
#        run: ./gradlew jacocoTestReport
#
#      - name: Check Coverage
#        run: ./gradlew jacocoTestCoverageVerification
#
#      - name: Verify Compilation Warnings
#        run: ./gradlew check --warning-mode=all

  build:
#    needs: deploy-test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: 21
          distribution: 'adopt'
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        uses: gradle/gradle-build-action@v2
        with:
          arguments: bootJar
          gradle-home-cache-cleanup: true

  deployment:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: 21
          distribution: 'adopt'
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build to docker
        uses: gradle/gradle-build-action@v2
        with:
          arguments: bootJar
          gradle-home-cache-cleanup: true

      - name: Increment version
        id: increment_version
        uses: mathieudutour/github-tag-action@v6.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          default_bump: patch
          create_annotated_tag: true

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{secrets.DOCKER_USER}}
          password: ${{secrets.DOCKER_PASSWORD}}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: Dockerfile
          push: true
          tags: torhugo/notification-user-api:${{ steps.increment_version.outputs.new_tag }}

  discord-notification:
    runs-on: ubuntu-latest

    needs: deployment

    steps:
      - name: Discord Notification
        uses: sarisia/actions-status-discord@v1.9.0
        if: always()
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          title: "notification-user-api"
          description: "Build and Deploy to Docker"
          username: GitHub Actions